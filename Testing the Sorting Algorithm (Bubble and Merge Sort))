package asm;

import java.util.Arrays;
import java.util.Random;

class SortComparison {
    // Bubble Sort
    public static void bubbleSort(int arr[]) {
        int n = arr.length;
        for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < n - i - 1; j++) {
                if (arr[j] > arr[j + 1]) {
                    int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
            }
        }
    }
    
    // Merge Sort
    public static void mergeSort(int arr[], int l, int r) {
        if (l < r) {
            int m = l + (r - l) / 2;
            mergeSort(arr, l, m);
            mergeSort(arr, m + 1, r);
            merge(arr, l, m, r);
        }
    }
    
    public static void merge(int arr[], int l, int m, int r) {
        int n1 = m - l + 1;
        int n2 = r - m;
        
        int L[] = new int[n1];
        int R[] = new int[n2];
        
        for (int i = 0; i < n1; ++i)
            L[i] = arr[l + i];
            
        for (int j = 0; j < n2; ++j)
            R[j] = arr[m + 1 + j];
            
        int i = 0, j = 0, k = l;
        while (i < n1 && j < n2) {
            if (L[i] <= R[j]) {
                arr[k] = L[i];
                i++;
            } else {
                arr[k] = R[j];
                j++;
            }
            k++;
        }
        
        while (i < n1) {
            arr[k] = L[i];
            i++;
            k++;
        }
        
        while (j < n2) {
            arr[k] = R[j];
            j++;
            k++;
        }
    }
    
    public static int[] generateRandomArray(int size) {
        Random rand = new Random();
        int[] arr = new int[size];
        for (int i = 0; i < size; i++) {
            arr[i] = rand.nextInt(10000);
        }
        return arr;
    }
    
    public static void main(String[] args) {
        int[] sizes = {1, 10, 100, 1000, 10000, 100000, 1000000};
        
        System.out.println(" Size     | Bubble Sort (ms)| Merge Sort (ms)");
        System.out.println("-------------------------------------------");
        
        for (int size : sizes) {
            int[] arr1 = generateRandomArray(size);
            int[] arr2 = Arrays.copyOf(arr1, arr1.length);
            
            long startTime = System.currentTimeMillis();
            if (size <= 10000) {
                bubbleSort(arr1);
            }
            long endTime = System.currentTimeMillis();
            long bubbleTime = (size <= 10000) ? (endTime - startTime) : -1;
            
            startTime = System.currentTimeMillis();
            mergeSort(arr2, 0, arr2.length - 1);
            endTime = System.currentTimeMillis();
            long mergeTime = endTime - startTime;
            
            System.out.printf("%9d | %15s | %15d\n", size, 
                (bubbleTime == -1 ? "N/A" : bubbleTime), mergeTime);
        }
    }
}
